<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hxy.bbs.mapper.ContentMapper">
	<resultMap id="BaseResultMap" type="cn.hxy.bbs.model.Content">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="author_id" property="authorId" jdbcType="INTEGER" />
		<result column="title_id" property="titleId" jdbcType="INTEGER" />
		<result column="up" property="up" jdbcType="INTEGER" />
		<result column="down" property="down" jdbcType="INTEGER" />
		<result column="create_date" property="createDate" />
		<result column="name" property="authorName" jdbcType="VARCHAR" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="section" property="section" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="cn.hxy.bbs.model.Content"
		extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, author_id, title_id, up, down, create_date
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	
	<select id="findContentByName" resultMap="BaseResultMap">
  	select * from t_content where content like "%"#{name}"%"
 	 </select>
	
	<select id="getContent" resultMap="BaseResultMap">
	select * from t_content
	</select>
	
	<select id="getTotalContentByTitleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
	select count(title_id) from t_content
	where title_id = #{id,jdbcType=INTEGER} 
	</select>
	<select id="getAllByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	SELECT
	c.id,
	c.content,
	c.create_date,
	t.name title,
	s.section_name section
	FROM (t_content c),(t_title t),(t_section s)
	WHERE c.author_id = #{id,jdbcType=INTEGER} 
	AND
	c.title_id = t.id
	AND 
	t.section_id = s.id
	order by create_date desc

	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		c.id,
		c.author_id,
		c.title_id,
		c.up,
		c.down,
		c.create_date,
		c.content,
		u.name
		from t_content c,t_user u
		where c.id = #{id,jdbcType=INTEGER}
		and c.id=u.id
	</select>
	<select id="selectByTitleId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		c.id,
		c.author_id,
		c.title_id,
		c.up,
		c.down,
		c.create_date,
		c.content,
		u.name
		from t_content c,t_user u
		where c.title_id = #{id,jdbcType=INTEGER}
		and c.author_id=u.id
		order by c.create_date
	</select>
	<select id="getAllUp" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select up from t_content
		where id=#{id,jdbcType=INTEGER}
	</select>
	<select id="getAllDown" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
		select down from t_content
		where id=#{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_content
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="cn.hxy.bbs.model.Content">
	
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
          SELECT LAST_INSERT_ID() as id
      	</selectKey>
		insert into t_content (id, author_id, title_id,
		up, down,
		content)
		values (#{id,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
		#{titleId,jdbcType=INTEGER},
		0, 0,
		#{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="cn.hxy.bbs.model.Content">
		insert into t_content
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="authorId != null">
				author_id,
			</if>
			<if test="titleId != null">
				title_id,
			</if>
			<if test="up != null">
				up,
			</if>
			<if test="down != null">
				down,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="authorId != null">
				#{authorId,jdbcType=INTEGER},
			</if>
			<if test="titleId != null">
				#{titleId,jdbcType=INTEGER},
			</if>
			<if test="up != null">
				#{up,jdbcType=INTEGER},
			</if>
			<if test="down != null">
				#{down,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=DATE},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.hxy.bbs.model.Content">
		update t_content
		<set>
			<if test="authorId != null">
				author_id = #{authorId,jdbcType=INTEGER},
			</if>
			<if test="titleId != null">
				title_id = #{titleId,jdbcType=INTEGER},
			</if>
			<if test="up != null">
				up = #{up,jdbcType=INTEGER},
			</if>
			<if test="down != null">
				down = #{down,jdbcType=INTEGER},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=DATE},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.hxy.bbs.model.Content">
		update t_content
		set author_id = #{authorId,jdbcType=INTEGER},
		title_id = #{titleId,jdbcType=INTEGER},
		up = #{up,jdbcType=INTEGER},
		down = #{down,jdbcType=INTEGER},
		create_date = #{createDate,jdbcType=DATE},
		content = #{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.hxy.bbs.model.Content">
		update t_content
		set author_id = #{authorId,jdbcType=INTEGER},
		title_id = #{titleId,jdbcType=INTEGER},
		up = #{up,jdbcType=INTEGER},
		down = #{down,jdbcType=INTEGER},
		create_date = #{createDate,jdbcType=DATE}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateUpIfExist" parameterType="java.lang.Integer">
		update t_content set up = up-1
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateUpIfNotExist" parameterType="java.lang.Integer">
		update t_content set up = up+1
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateDownIfExist" parameterType="java.lang.Integer">
		update t_content set down = down-1
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateDownIfNotExist" parameterType="java.lang.Integer">
		update t_content set down = down+1
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>